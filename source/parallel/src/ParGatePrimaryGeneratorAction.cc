/*----------------------
 GATE version name: gate_v6

 Copyright (C): OpenGATE Collaboration

 This software is distributed under the terms
 of the GNU Lesser General  Public Licence (LGPL)
 See GATE/LICENSE.txt for further details
 ----------------------*/

/*
 \class  ParGatePrimaryGeneratorAction.cc
 \author copernicus email:copernicus231@gmail.com
 */
#ifdef GATE_PARALLEL_MPI

#include "ParGatePrimaryGeneratorAction.hh"
#include "G4Types.hh"
#include "GateSourceMgr.hh"
#include "GateSourceMgrFactory.hh"
#include "G4RunManager.hh"
#include "G4PrimaryParticle.hh"

ParGatePrimaryGeneratorAction::ParGatePrimaryGeneratorAction() :
		GatePrimaryGeneratorAction() {

}

ParGatePrimaryGeneratorAction::~ParGatePrimaryGeneratorAction() {

}

void ParGatePrimaryGeneratorAction::GenerateSimulationPrimaries(
		G4Event *event) {
	//! compute the right number of events per slice at this time

	GateSourceMgr* sourceMgr = GateSourceMgrFactory::GetSourceManager();

	G4int numVertices = sourceMgr->PrepareNextEvent(event);
	//! stop the run if no particle has been generated by the source manager
	if (numVertices == 0) {
		G4RunManager* runManager = G4RunManager::GetRunManager();

		runManager->AbortRun(true);
		if (m_nVerboseLevel > 1)
			G4cout
					<< "GatePrimaryGeneratorAction::GeneratePrimaries: numVertices == 0, run aborted "
					<< G4endl;
	} else {
		m_nEvents++;
		G4PrimaryParticle * p = event->GetPrimaryVertex(0)->GetPrimary(0);
		//    if(sourceMgr->GetWeight()>0)  event->GetPrimaryVertex()->SetWeight(sourceMgr->GetWeight());
		if (sourceMgr->GetWeight() > 0)
			p->SetWeight(sourceMgr->GetWeight());

		if (m_nVerboseLevel > 0) {
			if ((m_nEvents % m_printModulo) == 0) {
				G4cout
						<< "GatePrimaryGeneratorAction::GeneratePrimaries: m_nEvents "
						<< m_nEvents << G4endl;
			}
		}
	}
}

#endif
